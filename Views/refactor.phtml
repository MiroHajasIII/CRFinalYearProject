<?php require('templates/header.phtml') ?>

<div id="documentInputChoices">
    <h2>Document Input Choices</h2>
    <!-- GitHub Link Input WIP TODO-->
    <div class="form-group">
        <label for="githubLink">GitHub Link:</label>
        <input type="text" class="form-control" id="githubLink" placeholder="Enter GitHub link">
    </div>
    <!-- Drag and Drop Area, including multiple file types to be used -->
    <div id="dragDropArea">
        <p>Drag and drop your file here</p>
        <input type="file" id="fileInput" accept=".txt, .php, .phtml, .css, .html">
    </div>
</div>

<div>
    <div id="textAreas" class="row">
        <!-- Editor area -->
        <div class="col-md-6">
            <!-- Editor display area -->
            <div class="codeMirrorTextEditors" id="editorDisplay">
                <h2>Editor Area</h2>
                <!-- Display uploaded document here -->
                <textarea id="codeInput"></textarea>
            </div>
        </div>

        <div class="col-md-6">
            <!-- Results area -->
            <div class="codeMirrorTextEditors" id="resultsDisplay">
                <h2>Results Area</h2>
                <textarea id="codeOutput"></textarea>
            </div>
        </div>
        <!-- Refactor button -->
        <button id="refactorButton" class="btn btn-warning mt-3 btn-sm">Refactor</button>
        <!-- Download button -->
        <button id="downloadButton" class="btn btn-secondary mt-3 btn-sm">Download Refactored Code</button>
    </div>
</div>

<?php require('templates/footer.phtml') ?>

<script>
    /**
     * logic and variables found below
     */
    // Get the textarea elements
    var codeInput = document.getElementById('codeInput');
    var codeOutput = document.getElementById('codeOutput');

    // Initialize CodeMirror for codeInput
    var editorInput = CodeMirror.fromTextArea(codeInput, {
        lineNumbers: true,
        mode: 'javascript',
        theme: 'dracula'
    });

    // Initialize CodeMirror for codeOutput
    var editorOutput = CodeMirror.fromTextArea(codeOutput, {
        lineNumbers: true,
        mode: 'javascript',
        theme: 'dracula',
        readOnly: true // Make the output area read-only
    });

    // load the user chosen file into the CodeMirror text editor area
    document.getElementById('fileInput').addEventListener('change', function(event) {
        console.log('File selected');
        var file = event.target.files[0];
        var reader = new FileReader();

        reader.onload = function(e) {
            // Set the content of the CodeMirror editor to the loaded file content
            editorInput.setValue(e.target.result);
        };
        reader.readAsText(file);
    });



    /**
     * functions and relative logic found below
     */
    // Function to handle editor area and results area
    function copyText() {
        // Get the code from the editor
        var code = editorInput.getValue();

        // Set the code to the output area
        editorOutput.setValue(code);
    }

    // Add event listener to the "Refactor" button
    document.getElementById('refactorButton').addEventListener('click', function() {
        // Call the copyText function when the button is clicked
        copyText();
    });

    // Add event listener to the "Download" button
    document.getElementById('downloadButton').addEventListener('click', function() {
        // Get the code from the output area
        var code = editorOutput.getValue();

        // Create a Blob object containing the code
        var blob = new Blob([code], { type: 'text/plain' });

        // Create a URL for the Blob object
        var url = URL.createObjectURL(blob);

        // Create an anchor element with the download attribute set to the desired file name
        var a = document.createElement('a');
        a.href = url;
        a.download = 'refactored_code.txt';

        // Append the anchor element to the body
        document.body.appendChild(a);

        // Simulate a click on the anchor element to trigger the download
        a.click();

        // Remove the anchor element from the body
        document.body.removeChild(a);

        // Revoke the URL to release the resources
        URL.revokeObjectURL(url);
    });
</script>
